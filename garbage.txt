                    <table className="info is-hidden-mobile">
                        <tr>
                            <td>
                                <img className="icon-custom" src={phoneIcon} alt = "phone-icon" />
                            </td>
                            <td>
                                92 999 737 | 27 643 085
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <img className="icon-custom" src={emailIcon} alt = "email-icon" />
                            </td>
                            <td>
                                tucnospro@gmail.com
                            </td>
                        </tr>
                    </table>

                    rgba(65, 76, 160, 0.415), rgba(35, 40, 80, 0.442)





import React, { useState, useRef, useEffect } from "react";
import Logo from "../images/logo_tucnospro.png";
import "bulma/css/bulma.min.css";
import {Link, NavLink} from "react-router-dom";
import phoneIcon from '../images/phone-287.svg';
import emailIcon from '../images/email-155.svg';
import { Expo, gsap } from "gsap";
import data from '../mock_data.json';
import uuid from "react-uuid";

export function Navbar ()
{

    const [active, setActive] = useState(false);

    function activateLinks()
    {
        setActive( (prev) => {
            return !prev
        })
    };

    const dropmenuRef = useRef(null);

    const [toggle, setToggle] = useState(false);

    function toggleDrop ()
    {
        setToggle(!toggle);
    };

    useEffect(() => {
        if (toggle)
        {
            console.log(toggle);
            gsap.to(dropmenuRef.current, {
                duration: 1,
                y: 0,
                delay: 0,
                repeat: 0,
                yoyo: false,
                ease: Expo.easeInOut,
                paused: false
            });
        }
        else
        {
            console.log(toggle)
            gsap.to(dropmenuRef.current, {
                duration: 0.85,
                y: -375,
                delay: 0,
                repeat: 0,
                yoyo: false,
                ease: Expo.easeInOut,
                paused: false
            });
        }
    }, [toggle]);

    const dropmenuRef2 = useRef(null);

    const [toggle2, setToggle2] = useState(false);

    function toggleDrop2 ()
    {
        setToggle2(!toggle2);
    };

    useEffect(() => {
        if (toggle2)
        {
            console.log(toggle2);
            gsap.to(dropmenuRef2.current, {
                duration: 1,
                y: 0,
                delay: 0,
                repeat: 0,
                yoyo: false,
                ease: Expo.easeInOut,
                paused: false
            });
        }
        else
        {
            console.log(toggle2)
            gsap.to(dropmenuRef2.current, {
                duration: 0.85,
                y: -375,
                delay: 0,
                repeat: 0,
                yoyo: false,
                ease: Expo.easeInOut,
                paused: false
            });
        }
    }, [toggle2]);

    return(
        <>
            <nav className = "navbar is-fixed-top">
                <div className = "navbar-brand">
                    <Link className = "navbar-item my-4 mx-5" to = "/"> <img className = "logo" src = {Logo} alt = "logo img" /></Link>
                    <ul className="info">
                        <li>
                            <span className="info icon-text is-hidden-mobile">
                                <span className="icon">
                                    <img className="icon-custom" src={phoneIcon} alt = "phone-icon" />
                                </span>
                                <span>92 999 737 | 27 643 085</span>
                            </span>
                        </li>
                        <li>
                            <span className="info icon-text is-hidden-mobile">
                                <span className="icon">
                                    <img className="icon-custom" src={emailIcon} alt = "email-icon" />
                                </span>
                                <div className="m-auto">
                                    <span>tucnospro@gmail.com</span>
                                </div>
                            </span>
                        </li>
                    </ul>
                    <a className="navbar-burger" onClick={activateLinks}>
                        <span></span>
                        <span></span>
                        <span></span>
                    </a>
                </div>
                <div className = {active ? "navbar-menu is-active mx-5" : "navbar-menu mx-6"} id = "nav-links">
                    <div className = "navbar-end">
                        <NavLink className = "navbar-item aqua font-size" to = "/">Accueil</NavLink>
                        <NavLink className = "navbar-item aqua font-size" to = "/a-propos">A propos</NavLink>
                        <div className="drop">
                            <NavLink onMouseEnter={() => {toggle ? setToggle(true) : setToggle(true)}} onMouseLeave={toggleDrop} className = "navbar-item aqua font-size drop-btn-padding" to = "/formations">Formations</NavLink>
                            <div className="drop-menu-box">
                                <div ref={dropmenuRef} onMouseEnter={() => {toggle ? setToggle(true) : setToggle(true)}} onMouseLeave={toggleDrop} className="drop-menu box">
                                    {
                                        data.categories.map((categorie) =>
                                        {
                                            return (
                                                <>
                                                    <a key={uuid()}><p className="has-text-dark my-2">{categorie.name}</p></a>
                                                </>
                                            )
                                        })
                                    }
                                </div>
                            </div>
                        </div>
                        <NavLink className = "navbar-item aqua font-size" to = "/nos-partenaires">Nos partenaires</NavLink>
                        <div className="drop">
                            <NavLink onMouseEnter={() => {toggle2 ? setToggle2(true) : setToggle2(true)}} onMouseLeave={toggleDrop2} className = "navbar-item aqua font-size drop-btn-padding" to = "/certifications">Certifications</NavLink>
                            <div className="drop-menu-box">
                                <div ref={dropmenuRef2} onMouseEnter={() => {toggle2 ? setToggle2(true) : setToggle2(true)}} onMouseLeave={toggleDrop2} className="drop-menu box">
                                    {
                                        data.categories.map((categorie) =>
                                        {
                                            return (
                                                <>
                                                    <a key={uuid()}><p className="has-text-dark my-2">{categorie.name}</p></a>
                                                </>
                                            )
                                        })
                                    }
                                </div>
                            </div>
                        </div>
                        <NavLink className = "navbar-item aqua font-size" to = "/blog">Blog</NavLink>
                        <NavLink className = "navbar-item aqua font-size" to = "/contact">Contact</NavLink>
                    </div>
                </div>
            </nav>
        </>
    )
}





, {headers: {"Content-Type": "multipart/form-data"}}






 onClick={() => window.location.reload(true)}






const {id} = useParams();

    const [blogData, setBlogData] = useState({blog: {}})
    const [comments, setComments] = useState([]);
    const [image, setImage] = useState(["something"]);

    async function getBlogData()
    {
        try
        {
            const response = await axios.get(`http://localhost:3001/blog/post/${id}`);
            setBlogData(response.data);
            setImage([response.data.blog.image]);
            setComments(response.data.blog.comments);
            
            const img = response.data.blog.image;
            console.log(img);
            console.log(typeof img);
            console.log(image);
        }
        catch(err)
        {
            console.log(err);
        }
    }

    useEffect(() => {
        getBlogData();
        console.log(image);
    }, [id]);

    useEffect(() => {
        console.log(comments);
    }, [comments]);

    ﻿Le Data Scientist est responsable de la gestion et de l’analyse des données (big data). Plus que cela, il est en charge de la récupération et du traitement de millions d’informations car au-delà de la fonction du « Data Analyst », le Data Scientist a le rôle de faire parler les données et de les mettre au service de la direction d’une entreprise. Ce métier relève des enjeux à la fois fonctionnels et stratégiques.
Les diverses compétences techniques d'un Data Scientist lui permettent de s’adapter à son environnement de travail. Certaines entreprises font le choix de combiner différents profils afin de créer une équipe Big Data en raison de la complexité technique des taches demandées pour ce poste.
Les champs d’analyse des données en entreprise sont très larges : données relatives à la production, analyse du marché et ses prédictions, connaissance du comportement client, précision marketing, résultats de l’entreprise… Ainsi, le Data Scientist joue un grand rôle dans la création d’indicateurs précieux et ce, à tous les niveaux de l’entreprise. C’est grâce à la précision de son analyse qu’il peut mettre sur pied des modèles de prédiction.
Aussi, bien que les missions du Data Scientist diffèrent du Data miner, certains considèrent que c’est l’évolution de poste de ce dernier. Missions principales du Data Scientist et Chief Data Scientist
item one
item two
item three
dssqdz